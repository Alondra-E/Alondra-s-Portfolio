# -*- coding: utf-8 -*-
"""CorrelationBetweenSalesandSocialMediaPosts.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1k6d0VC5OLX0bqo5cax_hcj2DPVm3TTSW
"""

#import pandas as pd

sales_data = pd.read_excel('cleaned_verde_data.xlsx')
# posts_data = pd.read_excel('vb_posts.xlsx')

import pandas as pd

from google.colab import files
uploaded = files.upload()

#convert everything into date format
sales_data['Date'] = pd.to_datetime(sales_data['Date'])
posts_data['Post Date'] = pd.to_datetime(posts_data['Post Date'])

#adding in new column, week after post to analyze how a post has affected sales
posts_data['Week After Post'] = posts_data['Post Date'] + pd.Timedelta(weeks=1)

#turning excel sheets into DF
sales_data_df = pd.DataFrame(sales_data)
posts_data_df = pd.DataFrame(posts_data)

posts_data_df

# merging excel sheets
result = posts_data.merge(sales_data, on = 'Item')

# renaiming columns
result = result.rename(columns = {'Post Date' : 'Post_Date', 'Week After Post' : 'Week_After_Post', 'Week Before Post' : 'Week_Before_Post'})

#at this cell we have a dataframe df that has all of the items matched with the date they were mentioned in a post, and all the sales for the week after the post!!!
df = result[(result['Date'] >= result['Post_Date']) & (result['Date'] <= result['Week_After_Post'])]
df

#what we want! sales per day for the items that were posted
item_date_df = df.groupby(['Item','Date'])
sales_per_day_and_item_DF = item_date_df['Net Sales'].sum()
sales_per_day_and_item_DF = pd.DataFrame(sales_per_day_and_item_DF)
sales_per_day_and_item_DF

# sales per day per posted item for the past 2 years
result_item_date_df = result.groupby(['Item','Date'])
result_sales_per_day_and_item_DF = result_item_date_df['Net Sales'].sum()
result_sales_per_day_and_item_DF = pd.DataFrame(result_sales_per_day_and_item_DF)
result_sales_per_day_and_item_DF

#sales per day within a week of a post
post_sales_date_df = result.groupby(['Date'])
post_sales_date_df = post_sales_date_df['Net Sales'].sum()
post_sales_date_df

#sum of sales for every day in past 2 years
date_df = sales_data_df.groupby(['Date'])
sales_per_day_df = date_df['Net Sales'].sum()
sales_per_day_df

#result tells us that there are external factors, and we should look at specific items
print(f"The average sales per day for the past two years is: {round(sales_per_day_df.mean(), 2)}")
print(f"The average sales per day on days within a week of a post is: {round(post_sales_date_df.mean(), 2)}")

# now we are going to look at how the sales change in the week before and after a post
#and run the same steps as above
change_by_post_df = result[(result['Date'] >= result['Week_Before_Post']) & (result['Date'] <= result['Week_After_Post'])]
change_by_post_df

change_item_date_df = change_by_post_df.groupby(['Item','Date'])
change_sales_per_day_and_item_DF = change_item_date_df['Net Sales'].sum()
change_sales_per_day_and_item_DF

#time to visualize
import matplotlib.pyplot as plt
import seaborn as sns

plt.plot(change_sales_per_day_and_item_DF['Date'], change_sales_per_day_and_item_DF['Net Sales'])